buildscript {
	ext {
		springBootVersion = '1.5.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("io.spring.gradle:dependency-management-plugin:0.5.1.RELEASE")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

jar {
	baseName = 'mastering-spring-mvc4'
	version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	
	compile('org.springframework.boot:spring-boot-starter-test') // 일반 테스트


	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-social-twitter')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.webjars:materializecss:0.96.0')
	compile('org.webjars:jquery:2.1.4')
	compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')
	compile('io.springfox:springfox-swagger2:2.4.0')
	compile('io.springfox:springfox-swagger-ui:2.4.0')
	compile('org.thymeleaf.extras:thymeleaf-extras-springsecurity4')
	//compile('io.fasterxml.jackson.dataformat:jackson-dataformat-xml') // 클라이언트의 accept헤더에 따른 json or xml처리를 위함

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.assertj:assertj-core:3.0.0') // RESTful 테스트
	testCompile('com.jayway.jsonpath:json-path') // RESTful 테스트
}
